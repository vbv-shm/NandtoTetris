// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Screen.jack

/**
 * A library of functions for displaying graphics on the screen.
 * The Hack physical screen consists of 256 rows (indexed 0..255, top to bottom)
 * of 512 pixels each (indexed 0..511, left to right). The top left pixel on 
 * the screen is indexed (0,0).
 */
class Screen {
	static boolean color;
    /** Initializes the Screen. */
    function void init() {
	return;
    }

    /** Erases the entire screen. */
    function void clearScreen() {
	return;
    }

    /** Sets the current color, to be used for all subsequent drawXXX commands.
     *  Black is represented by true, white by false. */
    function void setColor(boolean b) {
	let color=b;
	return;
    }

    /** Draws the (x,y) pixel, using the current color. */
    function void drawPixel(int x, int y) {
	var int address,value,rem,c,d;
	let address= 16384+(32*y)+(x/16);
	let value =Memory.peek(address);
	let rem=Screen.remainder(x,16);
	let rem=15-rem;

	if(color){let d=1;}
	else{let d=0;}
	let c=1;

	while(rem>0){
		let c=c+c;
		let rem=rem-1;
	}
	
	if(d=1){do Memory.poke(address,value | c);}
	else{ 

		do Memory.poke(address,value & ~c);
	}
	return;
    }

    /** Draws a line from pixel (x1,y1) to pixel (x2,y2), using the current color. */
    function void drawLine(int x1, int y1, int x2, int y2) {	

	return;
    }

    /** Draws a filled rectangle whose top left corner is (x1, y1)
     * and bottom right corner is (x2,y2), using the current color. */
    function void drawRectangle(int x1, int y1, int x2, int y2) {
	return;
    }

    /** Draws a filled circle of radius r<=181 around (x,y), using the current color. */
    function void drawCircle(int x, int y, int r) {
	return;
    }


    function int power(int number, int p){
	var int value;
	let value = number;
	if (p = 0){return 1;}
	else{
	while(p>1){
	let value = value*number;
	let p=p-1;}	
	return value;}
}
   function int remainder(int x, int y){
	while(y<x){
		let x=x-y;
}
	return x;
}
}
