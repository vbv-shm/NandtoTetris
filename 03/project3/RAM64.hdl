// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // Put your code here:
    Not6(in=address,out=address2);
    Not6(in=address2,out[0..2]=add0to2,out[3..5]=add3to5);
    DMux8Way(in=load,sel=add3to5,a=o0,b=o1,c=o2,d=o3,e=o4,f=o5,g=o6,h=o7);
    RAM8(in=in,load=o0,address=add0to2,out=out1);
    RAM8(in=in,load=o1,address=add0to2,out=out2);
    RAM8(in=in,load=o2,address=add0to2,out=out3);
    RAM8(in=in,load=o3,address=add0to2,out=out4);
    RAM8(in=in,load=o4,address=add0to2,out=out5);
    RAM8(in=in,load=o5,address=add0to2,out=out6);
    RAM8(in=in,load=o6,address=add0to2,out=out7);
    RAM8(in=in,load=o7,address=add0to2,out=out8);
    Mux8Way16(a=out1,b=out2,c=out3,d=out4,e=out5,f=out6,g=out7,h=out8,sel=add3to5,out=out);

}