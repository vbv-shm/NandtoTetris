// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    Not14(in=address,out=address2);
    Not14(in=address2,out[0..11]=add0to10,out[12..13]=add11to13);
    DMux4Way(in=load,sel=add11to13,a=o0,b=o1,c=o2,d=o3);
    RAM4K(in=in,load=o0,address=add0to10,out=out1);
    RAM4K(in=in,load=o1,address=add0to10,out=out2);
    RAM4K(in=in,load=o2,address=add0to10,out=out3);
    RAM4K(in=in,load=o3,address=add0to10,out=out4);
    Mux4Way16(a=out1,b=out2,c=out3,d=out4,sel=add11to13,out=out);
}